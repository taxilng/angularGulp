angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/custom/adjecent.html",'<label class="control-label {{form.labelHtmlClass}}">{{form.title}}</label>'),e.put("directives/decorators/bootstrap/custom/datePicker.html",'<div class="{{form.divClass}}"><div class="input-group input-large date-picker input-daterange" data-date="{{form.startDate}}" data-date-format="{{form.dateFormat}}"><input type="text" class="form-control" uib-datepicker-popup="{{form.format}}" ng-model="$$value$$" is-open="form.opened" datepicker-options="form.dateOptions" close-text="关闭" clear-text="清空" current-text="今天" alt-input-formats="form.altInputFormats" readonly="readonly"> <span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="buttonClick($event, form)"><i class="glyphicon glyphicon-calendar"></i></button></span></div></div>'),e.put("directives/decorators/bootstrap/custom/hActions.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}"><input ng-repeat-start="item in form.items" type="submit" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" value="{{item.title}}" ng-if="item.type === \'submit\'"> <button ng-repeat-end="" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" type="button" ng-disabled="form.readonly" ng-if="item.type !== \'submit\'" ng-click="buttonClick($event,item)"><span ng-if="item.icon" class="{{item.icon}}"></span>{{item.title}}</button></div>'),e.put("directives/decorators/bootstrap/custom/hAmount.html",'<div ng-if="form.hidden!=true" class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div ng-if="!form.fieldAddonLeft && !form.fieldAddonRight && !form.fieldIconLeft && !form.fieldIconRight && !form.fieldButtonRight && !form.fieldButtonLeft" class="{{form.divClass}}"><input ng-show="form.key" type="{{form.type}}" min="{{form.min}}" max="{{form.max}}" maxlength="20" step="any" amount="form" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"></div><div ng-if="form.fieldButtonRight || form.fieldButtonLeft" class="input-group {{form.divClass}}"><div ng-if="form.fieldButtonLeft" class="input-group-btn"><button type="button" class="btn {{form.buttonClass}}" ng-click="buttonClick($event, form)">{{form.buttonLabel}}</button></div><input ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="20" max="{{form.max}}" step="any" amount="form" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"><div ng-if="form.fieldButtonRight" class="input-group-btn"><button type="button" class="btn {{form.buttonClass}}" ng-click="buttonClick($event, form)">{{form.buttonLabel}}</button></div></div><div ng-if="form.fieldIconLeft || form.fieldIconRight" class="input-icon {{form.divClass}}" ng-class="\'right\': form.fieldIconRight"><i style="color: #ccc; display: block; position: absolute; margin: 11px 2px 4px 10px; width: 16px; height: 16px; font-size: 16px; text-align: center;" class="fa {{form.iconClass}}"></i> <input ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="16" max="{{form.max}}" step="any" amount="form" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"></div><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" class="input-group {{form.divClass}}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="20" max="{{form.max}}" step="any" amount="form" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hArray.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ol class="list-group" ng-model="modelArray" ui-sortable=""><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" style="position: relative; z-index: 20;" type="button" class="close pull-right"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ol><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hButton.html",""),e.put("directives/decorators/bootstrap/custom/hCheckbox.html",'<div class="checkbox schema-form-checkbox {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}}"><input type="checkbox" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="{{form.fieldHtmlClass}}" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.title"></span></label><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hCheckboxes.html",'<div sf-array="form" ng-model="$$value$$" class="form-group schema-form-checkboxes {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="checkbox" ng-repeat="val in titleMapValues track by $index"><label><input type="checkbox" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" ng-model="titleMapValues[$index]" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.titleMap[$index].name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hCondition.html",""),e.put("directives/decorators/bootstrap/custom/hContainer.html",'<div class="schema-form-{{form.type}} {{form.htmlClass}}"><div class="form-group" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div class="{{form.divClass}}"><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></div></div></div>'),e.put("directives/decorators/bootstrap/custom/hDatePicker.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div class="{{form.divClass}}"><div class="input-group input-large date-picker input-daterange" data-date="{{form.startDate}}" data-date-format="{{form.dateFormat}}"><input type="text" class="form-control" uib-datepicker-popup="{{form.format}}" ng-model="$$value$$" is-open="form.opened" datepicker-options="form.dateOptions" close-text="关闭" clear-text="清空" current-text="今天" alt-input-formats="form.altInputFormats" readonly="readonly"> <span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="buttonClick($event, form)" ng-disabled="{{form.disabled}}"><i class="glyphicon glyphicon-calendar"></i></button></span></div><div ng-if="form.checkTime" ng-model="form.timeOptions.mytime" uib-timepicker="" hour-step="form.timeOptions.hstep" minute-step="form.timeOptions.mstep" show-meridian="form.timeOptions.ismeridian"></div></div></div>'),e.put("directives/decorators/bootstrap/custom/hDefault.html",'<div ng-if="form.hidden!=true" class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div ng-if="!form.typeaheadMap && !form.percentSign && !form.fieldAddonLeft && !form.fieldAddonRight && !form.fieldIconLeft && !form.fieldIconRight && !form.fieldButtonRight && !form.fieldButtonLeft" class="{{form.divClass}}"><input tabindex="0" ng-show="form.key" type="{{form.type}}" min="{{form.min}}" max="{{form.max}}" maxlength="{{form.maxlength}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-blur="form.onKeyup($event, form,this)" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"></div><div ng-if="form.fieldButtonRight || form.fieldButtonLeft" class="input-group {{form.divClass}}"><div ng-if="form.fieldButtonLeft" class="input-group-btn"><button type="button" class="btn {{form.buttonClass}}" ng-click="buttonClick($event, form)">{{form.buttonLabel}}</button></div><input tabindex="0" ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="{{form.maxlength}}" max="{{form.max}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-blur="form.onKeyup($event, form,this)" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"><div ng-if="form.fieldButtonRight" class="input-group-btn"><button type="button" class="btn {{form.buttonClass}}" ng-click="buttonClick($event, form)">{{form.buttonLabel}}</button></div></div><div ng-if="form.fieldIconLeft || form.fieldIconRight" class="input-icon {{form.divClass}}" ng-class="\'right\': form.fieldIconRight"><i style="color: #ccc; display: block; position: absolute; margin: 11px 2px 4px 10px; width: 16px; height: 16px; font-size: 16px; text-align: center;" class="fa {{form.iconClass}}"></i> <input tabindex="0" ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="{{form.maxlength}}" max="{{form.max}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-blur="form.onKeyup($event, form,this)" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"></div><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" class="input-group {{form.divClass}}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input tabindex="0" ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="{{form.maxlength}}" max="{{form.max}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-blur="form.onKeyup($event, form,this)" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><div ng-if="form.percentSign" class="{{form.divClass}}"><input tabindex="0" ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="{{form.maxlength}}" max="{{form.max}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-blur="form.onKeyup($event, form,this)" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.percentSign" class="percent-sign">%</span></div><div ng-if="form.typeaheadMap" class="{{form.divClass}}"><input tabindex="0" ng-show="form.key" type="{{form.type}}" min="{{form.min}}" maxlength="{{form.maxlength}}" max="{{form.max}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" name="{{form.key.slice(-1)[0]}}" uib-typeahead="state as state.name for state in form.typeaheadMap | filter:{name:$viewValue}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hFieldSet.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</legend><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></fieldset>'),e.put("directives/decorators/bootstrap/custom/hHelp.html",'<div class="helpvalue schema-form-helpvalue {{form.htmlClass}}" ng-bind-html="form.helpvalue"></div>'),e.put("directives/decorators/bootstrap/custom/hLabel.html",'<div class="form-group {{form.htmlClass}}"><label class="{{form.labelHtmlClass}} control-label">{{form.title}}</label><div class="{{form.divClass}}"><label class="control-label">{{$$value$$}}</label></div></div>'),e.put("directives/decorators/bootstrap/custom/hRadioButtons.html",'<div class="form-group schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><div><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label></div><div class="btn-group"><label class="btn {{ (item.value === $$value$$) ? form.style.selected || \'btn-default\' : form.style.unselected || \'btn-default\'; }}" ng-class="{ active: item.value === $$value$$ }" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" style="display: none;" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hRadioInline.html",'<div class="form-group schema-form-radios-inline {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div><label class="radio-inline" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hRadios.html",'<div class="form-group schema-form-radios {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="radio" ng-repeat="item in form.titleMap"><label><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hSection.html",'<div class="schema-form-section {{form.htmlClass}}"><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></div>'),e.put("directives/decorators/bootstrap/custom/hSelect.html",'<div ng-if="form.hidden!=true" class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div ng-if="!form.fieldButtonRight && !form.fieldButtonLeft" class="{{form.divClass}}"><select ng-model="$$value$$" ui-select2="$root.select2Options" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" name="{{form.key.slice(-1)[0]}}"></select></div><div ng-if="form.fieldButtonRight || form.fieldButtonLeft" class="input-group {{form.divClass}}"><div ng-if="form.fieldButtonLeft" class="input-group-btn"><button type="button" class="btn {{form.buttonClass}}" ng-click="buttonClick($event, form)">{{form.buttonLabel}}</button></div><select ng-model="$$value$$" ui-select2="$root.select2Options" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" name="{{form.key.slice(-1)[0]}}"></select><div ng-if="form.fieldButtonRight" class="input-group-btn {{form.btnBlockClass}}"><button type="button" class="btn {{form.buttonClass}}" ng-click="buttonClick($event, form)">{{form.buttonLabel}}</button></div></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/custom/hSubmit.html",'<div class="form-group schema-form-submit {{form.htmlClass}}"><input type="submit" class="btn {{ form.style || \'btn-primary\' }} {{form.fieldHtmlClass}}" value="{{form.title}}" ng-disabled="form.readonly" ng-if="form.type === \'submit\'"> <button class="btn {{ form.style || \'btn-default\' }}" type="button" ng-click="buttonClick($event,form)" ng-disabled="form.readonly" ng-if="form.type !== \'submit\'"><span ng-if="form.icon" class="{{form.icon}}"></span> {{form.title}}</button></div>'),e.put("directives/decorators/bootstrap/custom/hTabArray.html",'<div sf-array="form" ng-init="selected = { tab: 0 }" class="clearfix schema-form-tabarray schema-form-tabarray-{{form.tabType || \'left\'}} {{form.htmlClass}}"><div ng-if="!form.tabType || form.tabType !== \'right\'" ng-class="{\'col-xs-3\': !form.tabType || form.tabType === \'left\'}"><ul class="nav nav-tabs" ng-class="{ \'tabs-left\': !form.tabType || form.tabType === \'left\'}"><li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div><div ng-class="{\'col-xs-9\': !form.tabType || form.tabType === \'left\' || form.tabType === \'right\'}"><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane clearfix" ng-repeat="item in modelArray track by $index" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator><button ng-hide="form.readonly" ng-click="selected.tab = deleteFromArray($index).length - 1" type="button" class="btn {{ form.style.remove || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-trash"></i> {{ form.remove || \'Remove\'}}</button></div></div></div><div ng-if="form.tabType === \'right\'" class="col-xs-3"><ul class="nav nav-tabs tabs-right"><li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || appendToArray()"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div></div>'),e.put("directives/decorators/bootstrap/custom/hTabs.html",'<div ng-init="selected = { tab: 0 }" class="schema-form-tabs {{form.htmlClass}}"><ul class="nav nav-tabs"><li ng-repeat="tab in form.tabs" ng-disabled="form.readonly" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{ tab.title }}</a></li></ul><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane" ng-disabled="form.readonly" ng-repeat="tab in form.tabs" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><bootstrap-decorator ng-repeat="item in tab.items" form="item"></bootstrap-decorator></div></div></div>'),e.put("directives/decorators/bootstrap/custom/hTextArea.html",'<div class="form-group has-feedback {{form.htmlClass}} schema-form-textarea" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}} control-label" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div class="{{form.divClass}}"><textarea ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" maxlength="{{form.maxlength}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea></div><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}" class="{{form.divClass}}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <textarea class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" maxlength="{{form.maxlength}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span class="help-block" sf-message="form.description"></span></div>'),e.put("directives/decorators/bootstrap/custom/input.html",'<input ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control-modified {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}">'),e.put("directives/decorators/bootstrap/custom/label.html",'<label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,o){var r=function(e){var t=[];return e.forEach(function(e){t.push({name:e,value:e})}),t},s=function(t,r,s){if("string"===r.type&&"hDefault"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="hDefault",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(s),t.addMapping("bootstrapDecorator","hDefault","directives/decorators/bootstrap/custom/hDefault.html"),t.createDirective("hDefault","directives/decorators/bootstrap/custom/hDefault.html");var a=function(t,r,s){if("string"===r.type&&"hDate"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="hDate",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(a),t.addMapping("bootstrapDecorator","hDate","directives/decorators/bootstrap/custom/hDate.html"),t.createDirective("hDate","directives/decorators/bootstrap/custom/hDate.html");var l=function(t,r,s){if("string"===r.type&&"hAmount"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="hAmount",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(l),t.addMapping("bootstrapDecorator","hAmount","directives/decorators/bootstrap/custom/hAmount.html"),t.createDirective("hAmount","directives/decorators/bootstrap/custom/hAmount.html");var i=function(t,r,s){if("string"===r.type&&"hNumber"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="number",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(i),t.addMapping("bootstrapDecorator","number","directives/decorators/bootstrap/custom/hDefault.html"),t.createDirective("number","directives/decorators/bootstrap/custom/hDefault.html");var n=function(t,r,s){if("string"===r.type&&"hPassword"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="password",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(n),t.addMapping("bootstrapDecorator","password","directives/decorators/bootstrap/custom/hDefault.html"),t.createDirective("password","directives/decorators/bootstrap/custom/hDefault.html");var m=function(t,s,a){if("string"===s.type&&"hSelect"===s.format){var l=e.stdFormObj(t,s,a);if(l.key=a.path,l.type="hSelect",l.schema.titleMap)if(l.schema.titleMap instanceof Array)l.titleMap=l.schema.titleMap;else{l.titleMap=[];var i=l.schema.titleMap;for(var n in i)l.titleMap.push({name:n,value:i[n]})}else l.titleMap=r(s["enum"]);return a.lookup[o.stringify(a.path)]=l,l}};e.defaults.string.unshift(m),t.addMapping("bootstrapDecorator","hSelect","directives/decorators/bootstrap/custom/hSelect.html"),t.createDirective("hSelect","directives/decorators/bootstrap/custom/hSelect.html");var d=function(t,r,s){if("string"===r.type&&"hLabel"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="hLabel",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(d),t.addMapping("bootstrapDecorator","hLabel","directives/decorators/bootstrap/custom/hLabel.html"),t.createDirective("hLabel","directives/decorators/bootstrap/custom/hLabel.html");var c=function(t,r,s){if("string"===r.type&&"hTextarea"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="hTextarea",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(c),t.addMapping("bootstrapDecorator","hTextarea","directives/decorators/bootstrap/custom/hTextArea.html"),t.createDirective("hTextarea","directives/decorators/bootstrap/custom/hTextArea.html");var f=function(t,r,s){if("string"===r.type&&"date"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="hDatePicker",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(f),t.addMapping("bootstrapDecorator","hDatePicker","directives/decorators/bootstrap/custom/hDatePicker.html"),t.createDirective("hDatePicker","directives/decorators/bootstrap/custom/hDatePicker.html"),t.addMapping("bootstrapDecorator","label","directives/decorators/bootstrap/custom/label.html"),t.createDirective("label","directives/decorators/bootstrap/custom/label.html");var p=function(t,r,s){if("string"===r.type&&"minDatePicker"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="minDatePicker",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(p),t.addMapping("bootstrapDecorator","minDatePicker","directives/decorators/bootstrap/custom/datePicker.html"),t.createDirective("minDatePicker","directives/decorators/bootstrap/custom/datePicker.html");var u=function(t,r,s){if("string"===r.type&&"maxDatePicker"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="maxDatePicker",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(u),t.addMapping("bootstrapDecorator","maxDatePicker","directives/decorators/bootstrap/custom/datePicker.html"),t.createDirective("maxDatePicker","directives/decorators/bootstrap/custom/datePicker.html");var h=function(t,r,s){if("string"===r.type&&"inputField"===r.format){var a=e.stdFormObj(t,r,s);return a.key=s.path,a.type="inputField",s.lookup[o.stringify(s.path)]=a,a}};e.defaults.string.unshift(h),t.addMapping("bootstrapDecorator","inputField","directives/decorators/bootstrap/custom/input.html"),
t.createDirective("inputField","directives/decorators/bootstrap/custom/input.html"),t.addMapping("bootstrapDecorator","adjecent","directives/decorators/bootstrap/custom/adjecent.html"),t.createDirective("adjecent","directives/decorators/bootstrap/custom/adjecent.html"),t.addMapping("bootstrapDecorator","hContainer","directives/decorators/bootstrap/custom/hContainer.html"),t.createDirective("hContainer","directives/decorators/bootstrap/custom/hContainer.html")}]);